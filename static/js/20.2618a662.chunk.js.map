{"version":3,"file":"static/js/20.2618a662.chunk.js","mappings":"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","sources":["components/Buttons/Buttons.styled.js","components/Buttons/Buttons.jsx","components/Card/Card.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Card/Card.jsx","components/CardsList/CardsList.styled.js","components/BtnLoadMore/BtnLoadMore.styled.jsx","components/BtnLoadMore/BtnLoadMore.jsx","components/CardsList/CardsList.jsx","components/Filters/Filters.styled.js","components/Filters/Filters.jsx","components/InfoText/InfoText.styled.jsx","components/InfoText/InfoText.jsx","pages/Cars/Cars.styled.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { colors } from 'utils';\n\nexport const ButtonStyled = styled.button`\n  color: ${colors.btnText};\n  font-weight: 600;\n  line-height: 142.857%;\n\n  background: ${colors.btnMain};\n  padding: ${props => props.padding};\n  border-radius: 12px;\n  border: none;\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 142.857%;\n\n  transition: background 350ms cubic-bezier(0.17, 0.67, 0.83, 0.67);\n  &:hover,\n  &:focus {\n    background: ${colors.btnSecondary};\n  }\n`;\n","\nimport { ButtonStyled } from './Buttons.styled';\n\nconst Button = ({ padding, text, handleClick }) => {\n  return (\n    <ButtonStyled onClick={handleClick} type=\"button\" padding={padding}>\n      {text}\n    </ButtonStyled>\n  );\n};\n\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\n\nimport { colors } from 'utils';\n\nexport const SvgHeartEmpty = styled(FaRegHeart)`\n  width: 18px;\n  height: 18px;\n  fill: rgb(208 208 208);\n`;\n\nexport const SvgHeart = styled(FaHeart)`\n  width: 18px;\n  height: 18px;\n  fill: ${colors.btnMain};\n`;\n\nexport const BtnAddFav = styled.button`\n  position: absolute;\n  padding: 5px;\n  top: 14px;\n  right: 14px;\n  border: none;\n  background: transparent;\n  z-index: 1;\n`;\nexport const Item = styled.li`\n  width: 274px;\n`;\nexport const ImgWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  border-radius: 14px;\n  width: 274px;\n  height: 268px;\n`;\nexport const Img = styled.img`\n  width: 274px;\n  height: 268px;\n  object-fit: cover;\n\n  border-radius: 14px;\n  margin-bottom: 14px;\n\n  cursor: pointer;\n\n  transform: scale(1.1);\n  margin-left: 10px;\n  transition: 0.3s ease-in-out;\n\n  &:hover {\n    margin-left: 0px;\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MainInfo = styled.p`\n  color: ${colors.textMain};\n  font-size: ${props => props.fs}px;\n  font-weight: 500;\n  line-height: 150%;\n  margin-top: 14px;\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Highlight = styled.span`\n  color: ${colors.btnMain};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  margin-bottom: ${props => props.mb}px;\n  max-height: 39px;\n  color: ${colors.textSecondary};\n  font-size: 12px;\n  line-height: 160%;\n\n  & > li {\n    position: relative;\n    &:not(:last-child) {\n      margin-right: 12px;\n    }\n    &:not(:last-child)::after {\n      content: '';\n      position: absolute;\n      display: block;\n      width: 1px;\n      background-color: rgba(18, 20, 23, 0.1);\n      height: 16px;\n      top: 2px;\n      right: -6px;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { colors } from 'utils';\nimport { ButtonStyled } from '../Buttons/Buttons.styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(18, 20, 23, 0.5);\n  z-index: 300;\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  overflow: auto;\n  width: 561px;\n  min-height: 752px;\n  max-height: 800px;\n  padding: 40px;\n  background-color: ${colors.while};\n  border-radius: 24px;\n  z-index: 301;\n`;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: block;\n  height: 30px;\n  width: 30px;\n  right: 10px;\n  z-index: 1;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Icon = styled(AiOutlineClose)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: color 200ms linear;\n  width: 16px;\n  height: 16px;\n  :hover {\n    color: #3470ff;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 469px;\n  height: 248px;\n  margin-bottom: 14px;\n  margin: 0 auto 14px;\n  border-radius: 14px;\n  object-fit: cover;\n`;\n\nexport const Description = styled.p`\n  color: ${colors.textMain};\n  line-height: 142.857%;\n  margin-bottom: 24px;\n`;\n\nexport const Title = styled.p`\n  color: ${colors.textMain};\n  line-height: 142.857%;\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\n\nexport const CardList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  /* width: 461px; */\n  margin-bottom: 24px;\n`;\n\nexport const Card = styled.li`\n  display: inline-block;\n  padding: 7px 14px;\n  border-radius: 35px;\n  background: ${colors.cardBcg};\n\n  color: ${colors.textMain};\n  font-size: 12px;\n  line-height: 150%;\n  letter-spacing: -0.24px;\n\n  & > span {\n    font-weight: 600;\n    color: ${colors.btnMain};\n  }\n`;\n\nexport const Button = ButtonStyled.withComponent('a');\n","import { List, MainInfo, Highlight } from 'components/Card/Card.styled';\nimport { extractAddress } from 'utils';\n\nimport {\n  Overlay,\n  ModalWindow,\n  BtnClose,\n  Icon,\n  Img,\n  Title,\n  Description,\n  Card,\n  CardList,\n  Button,\n} from './Modal.styled';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useEffect } from 'react';\n\nconst Modal = ({ toggleOpen, data }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        toggleOpen();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleOpen]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      toggleOpen();\n    }\n  };\n\n  const address = extractAddress(data.address);\n  const arrOfCondition = data.rentalConditions.split('\\n');\n  const [text, number] = arrOfCondition[0].split(':');\n  const formattedMileage = Number(data.mileage).toLocaleString('en-US');\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <BtnClose onClick={toggleOpen}>\n          <Icon />\n        </BtnClose>\n        <Img src={data.img} alt=\"\" />\n        <MainInfo fs={18}>\n          <span>\n            {data?.make} <Highlight>{data?.model}</Highlight>, {data?.year}\n          </span>\n        </MainInfo>\n        <List mb={14}>\n          <li>{address?.city}</li>\n          <li>{address?.country}</li>\n          <li>Id:{data.id}</li>\n          <li>Year:{data.year}</li>\n          <li>Type:{data.type}</li>\n          <li>Fuel Consumption:{data.fuelConsumption}</li>\n          <li>Engine Size:{data.engineSize}</li>\n        </List>\n        <Description>{data.description}</Description>\n        <Title>Accessories and functionalities:</Title>\n        <List mb={5}>\n          {data.accessories.map(item => {\n            return <li key={nanoid()}>{item}</li>;\n          })}\n        </List>\n        <List mb={24}>\n          {data.functionalities.map(item => {\n            return <li key={nanoid()}>{item}</li>;\n          })}\n        </List>\n        <Title>Rental Conditions:</Title>\n        <CardList>\n          <Card>\n            {text}:<span>{number}</span>\n          </Card>\n          <Card>{arrOfCondition[1]}</Card>\n          <Card>{arrOfCondition[2]}</Card>\n          <Card>\n            Mileage: <span>{formattedMileage}</span>\n          </Card>\n          <Card>\n            Price: <span>{data.rentalPrice}</span>\n          </Card>\n        </CardList>\n        <Button href=\"tel:+380730000000\" padding=\"12px 50px\">\n          Rental car\n        </Button>\n      </ModalWindow>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import Button from 'components/Buttons/Buttons';\nimport {\n  Highlight,\n  Img,\n  Item,\n  List,\n  MainInfo,\n  SvgHeart,\n  TextWrapper,\n  BtnAddFav,\n  SvgHeartEmpty,\n  ImgWrapper,\n} from './Card.styled';\nimport { extractAddress } from 'utils';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFavorite } from '../../redux/carsSlice';\nimport { selectFavoritesId } from '../../redux/selectors';\nimport Modal from 'components/Modal/Modal';\n\nconst Card = ({ info }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleOpen = () => {\n    setIsModalOpen(!isModalOpen);\n    document.body.classList.toggle('body-scroll-lock');\n  };\n\n  const dispatch = useDispatch();\n\n  const address = extractAddress(info.address);\n\n  const favorites = useSelector(selectFavoritesId);\n\n  const isFavorite = favorites.includes(info.id);\n\n  return (\n    <Item>\n      <ImgWrapper>\n        <BtnAddFav onClick={() => dispatch(toggleFavorite(info.id))}>\n          {isFavorite ? <SvgHeart /> : <SvgHeartEmpty />}\n        </BtnAddFav>\n        <Img src={info?.img} alt={info?.make} onClick={toggleOpen} />\n      </ImgWrapper>\n      <TextWrapper>\n        <MainInfo fs={16}>\n          <span>\n            {info?.make} <Highlight>{info?.model}</Highlight>, {info?.year}\n          </span>\n          <span>{info?.rentalPrice}</span>\n        </MainInfo>\n        <List mb={28}>\n          <li>{address?.city}</li>\n          <li>{address?.country}</li>\n          <li>{info.rentalCompany}</li>\n          <li>{info.type}</li>\n          <li>{info.model}</li>\n          <li>{info.id}</li>\n          <li>{info.functionalities?.[0]}</li>\n        </List>\n      </TextWrapper>\n      <Button\n        handleClick={toggleOpen}\n        text={'Learn more'}\n        padding={'12px 98px'}\n      />\n      {isModalOpen && <Modal toggleOpen={toggleOpen} data={info} />}\n    </Item>\n  );\n};\n\nexport default Card;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 50px;\n  margin-bottom: 90px;\n  justify-content: center;\n  text-decoration: none;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'utils';\n\nexport const Button = styled.button`\n  display: block;\n  color: ${colors.btnMain};\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 150%;\n  text-decoration-line: none;\n  border: none;\n  background: transparent;\n  margin: 0 auto;\n  text-align: center;\n\n  padding: 10px;\n`;\n","import { Button } from './BtnLoadMore.styled';\n\nconst BtnLoadMore = ({ onClick }) => {\n  return <Button onClick={onClick}>Load more</Button>;\n};\n\nexport default BtnLoadMore;\n","import { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { List } from './CardsList.styled';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { cardsToDisplay } from 'utils';\nimport BtnLoadMore from 'components/BtnLoadMore/BtnLoadMore';\nimport InfoText from 'components/InfoText/InfoText';\n\nconst CardsList = ({ data }) => {\n  const [page, setPage] = useState(1);\n\n  const { displayedCars, isMoreToLoad } = cardsToDisplay(page, data);\n\n  const cardsToShow = data.length > 12 ? displayedCars : data;\n\n  const handleClick = () => {\n    setPage(page + 1);\n  };\n  return (\n    <>\n      {cardsToShow.length === 0 ? (\n        <InfoText\n          text={'There are no cars matching your search...'}\n          btn={false}\n        />\n      ) : (\n        <>\n          <List>\n            {cardsToShow.map((car, index) => (\n              <Card key={nanoid(index)} info={car} />\n            ))}\n          </List>\n          {data.length > 12 && isMoreToLoad ? (\n            <BtnLoadMore onClick={handleClick} />\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CardsList;\n","import styled from '@emotion/styled';\nimport { colors } from 'utils';\nimport { IoClose } from 'react-icons/io5';\n\nexport const FiltersWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 18px;\n  margin-top: 120px;\n  margin-bottom: 20px;\n\n  position: relative;\n  z-index: 2;\n\n  & > form {\n    display: flex;\n  }\n`;\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\nexport const Input = styled.input`\n  width: 160px;\n  height: 48px;\n  padding: 14px 41px 14px 24px;\n  border-radius: ${props =>\n    props.left ? '14px 0px 0px 14px' : ' 0px 14px 14px 0px;'};\n  border-right: 1px solid rgba(138, 138, 137, 0.2);\n  background: #f7f7fb;\n  border: 1px solid transparent;\n  border-right: ${props =>\n    props.left ? '1px solid rgba(138, 138, 137, 0.20)' : 'none'};\n  outline: none;\n\n  font-size: 18px;\n  font-weight: 500;\n  &:hover,\n  &:focus {\n    border: 1px solid #2684ff;\n  }\n\n  &::placeholder {\n    color: #121417;\n    font-family: Manrope;\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: -28px;\n  color: ${colors.textSecondary};\n  font-weight: 500;\n  line-height: 128.571%;\n`;\n\nexport const Submit = styled.button`\n  padding: 14px 44px;\n  border-radius: 12px;\n  border: none;\n  background: ${colors.btnMain};\n  font-weight: 600;\n  color: ${colors.btnText};\n  margin-left: 18px;\n  transition: background-color 350ms cubic-bezier(0.17, 0.67, 0.83, 0.67);\n  &:hover,\n  &:focus {\n    background: ${colors.btnSecondary};\n  }\n`;\n\nexport const Reset = styled.button`\n  position: absolute;\n  top: 15px;\n  left: 124px;\n  width: 17px;\n  height: 17px;\n  border: none;\n  background: transparent;\n`;\n\nexport const Svg = styled(IoClose)`\n  fill: ${colors.inputSvg};\n  transition: fill 250ms cubic-bezier(0.17, 0.67, 0.83, 0.67);\n\n  &:hover {\n    fill: ${colors.textMain};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport { selectBrands, selectPrice } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\nimport {\n  FiltersWrapper,\n  Input,\n  Label,\n  Reset,\n  Submit,\n  InputWrapper,\n  Svg,\n} from './Filters.styled';\nimport { stylesForBrand } from 'utils';\nimport { stylesForPrice } from 'utils';\nimport { useState } from 'react';\n\nconst Filters = () => {\n  const [formData, setFormData] = useState({\n    min: '',\n    max: '',\n  });\n\n  const dispatch = useDispatch();\n  const brands = useSelector(selectBrands);\n  const price = useSelector(selectPrice);\n\n  const handleChangeSelect = (selectedOption, type) => {\n    const value = selectedOption ? selectedOption.value : '';\n    dispatch(setFilter({ filter: type, value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { min, max } = e.target;\n    const value = { min: min.value, max: max.value };\n    dispatch(setFilter({ filter: 'mileageRange', value }));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleReset = type => {\n    setFormData({\n      ...formData,\n      [type]: '',\n    });\n  };\n\n  return (\n    <FiltersWrapper>\n      <InputWrapper>\n        <Label htmlFor=\"brand\">Car brand </Label>\n        <Select\n          id=\"brand\"\n          options={brands}\n          styles={stylesForBrand}\n          isClearable={true}\n          placeholder=\"Enter the text\"\n          onChange={selectedOption =>\n            handleChangeSelect(selectedOption, 'brand')\n          }\n        />\n      </InputWrapper>\n      <InputWrapper>\n        <Label htmlFor=\"price\">Price/ 1 hour </Label>\n        <Select\n          id=\"price\"\n          options={price}\n          styles={stylesForPrice}\n          isClearable={true}\n          placeholder=\"To $\"\n          onChange={selectedOption =>\n            handleChangeSelect(selectedOption, 'price')\n          }\n        />\n      </InputWrapper>\n\n      <form onSubmit={handleSubmit}>\n        <Label htmlFor=\"min\">Сar mileage / km </Label>\n        <InputWrapper>\n          <Input\n            id=\"min\"\n            name=\"min\"\n            value={formData.min}\n            pattern=\"[0-9]*\"\n            title=\"Please enter only numbers\"\n            placeholder={formData.min !== '' ? '' : 'From:'}\n            onChange={handleChange}\n            left\n          />\n          <Reset onClick={() => handleReset('min')}>\n            <Svg size={17} />\n          </Reset>\n        </InputWrapper>\n        <InputWrapper>\n          <Input\n            name=\"max\"\n            value={formData.max}\n            pattern=\"[0-9]*\"\n            title=\"Please enter only numbers\"\n            placeholder=\"To:\"\n            onChange={handleChange}\n          />\n          <Reset onClick={() => handleReset('max')}>\n            <Svg size={17} />\n          </Reset>\n        </InputWrapper>\n        <Submit>Search</Submit>\n      </form>\n    </FiltersWrapper>\n  );\n};\n\nexport default Filters;\n","import styled from '@emotion/styled';\nimport { MdHeartBroken } from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\nimport { colors } from 'utils';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 150px;\n`;\n\nexport const Text = styled.p`\n  position: relative;\n  font-weight: 700;\n  font-size: 34px;\n  text-align: center;\n  margin-bottom: 80px;\n`;\n\nexport const Heart = styled(MdHeartBroken)`\n  position: absolute;\n  top: 0;\n  right: -54px;\n  fill: ${colors.btnMain};\n  width: 44px;\n  height: 44px;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 500;\n  border-radius: 12px;\n  border: 2px solid ${colors.btnMain};\n  padding: 12px 50px;\n  color: ${colors.btnMain};\n  width: 245px;\n  transition: color 250ms ease, border 250ms ease, scale 250ms ease;\n  text-align: center;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: ${colors.btnSecondary};\n    border-color: ${colors.btnSecondary};\n    scale: 1.03;\n  }\n`;\n","import { Heart, Link, Text, Wrapper } from './InfoText.styled';\n\nconst InfoText = ({ text, btn }) => {\n  return (\n    <Wrapper>\n      <Text>\n        {text} <Heart />\n      </Text>\n      {btn ? <Link to={'/catalog'}>Go to catalog</Link> : null}\n    </Wrapper>\n  );\n};\n\nexport default InfoText;\n","import styled from '@emotion/styled';\nimport { colors } from 'utils';\n\nexport const PageWrapper = styled.div`\n  padding-right: 30px;\n  padding-left: 30px;\n\n  margin-left: auto;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 32px;\n  color: ${colors.textMain};\n  text-align: center;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { arrOfUnique, filterCars } from 'utils';\n\nexport const selectCars = state => state.cars.cars;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectError = state => state.cars.error;\n\nexport const selectIsLoading = state => state.cars.isLoading;\n\nexport const selectFavoritesId = state => state.cars.favorites;\n\nexport const selectFavorites = createSelector(\n  [selectCars, selectFavoritesId, selectFilter],\n  (cars, ids, filter) => {\n    const favCars = cars.filter(car => ids.includes(car.id));\n    const favFilteredCars = filterCars(favCars, filter);\n    const allFavCars = { favFilteredCars, favCars };\n    return allFavCars;\n  }\n);\nexport const selectVisibleCars = createSelector(\n  [selectCars, selectFilter],\n  (cars, filter) => {\n    const filteredCars = filterCars(cars, filter);\n    return filteredCars;\n  }\n);\n\nexport const selectBrands = createSelector([selectCars], cars => {\n  const uniqueBrands = arrOfUnique(cars, 'make');\n\n  const brands = Array.from(uniqueBrands).map(brandName => ({\n    value: brandName.toLowerCase(),\n    label: brandName,\n  }));\n  return brands;\n});\n\nexport const selectPrice = createSelector([selectCars], cars => {\n  const uniquePrice = arrOfUnique(cars, 'rentalPrice');\n\n  const numericPrices = uniquePrice.map(price =>\n    parseInt(price.replace('$', ''), 10)\n  );\n  const maxPrice = Math.max(...numericPrices);\n  const priceOption = [];\n\n  for (let i = 30; i <= maxPrice; i += 10) {\n    priceOption.push({ value: i, label: i.toString() });\n  }\n  return priceOption;\n});\n\n// [selectCars, selectFavoritesId],\n// (cars, favoriteIds) => {\n//   const favCars = cars.filter(car => favoriteIds.includes(car.id));\n//   return favCars;\n"],"names":["ButtonStyled","styled","_templateObject","_taggedTemplateLiteral","colors","props","padding","_ref","text","handleClick","_jsx","onClick","type","children","SvgHeartEmpty","FaRegHeart","SvgHeart","FaHeart","_templateObject2","BtnAddFav","_templateObject3","Item","_templateObject4","ImgWrapper","_templateObject5","Img","_templateObject6","TextWrapper","_templateObject7","MainInfo","_templateObject8","fs","Highlight","_templateObject9","List","_templateObject10","mb","Overlay","ModalWindow","BtnClose","Icon","AiOutlineClose","Description","Title","CardList","Card","Button","withComponent","toggleOpen","data","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","address","extractAddress","arrOfCondition","rentalConditions","split","_arrOfCondition$0$spl","_arrOfCondition$0$spl2","_slicedToArray","number","formattedMileage","Number","mileage","toLocaleString","event","currentTarget","target","_jsxs","src","img","alt","make","model","year","city","country","id","fuelConsumption","engineSize","description","accessories","map","item","nanoid","functionalities","rentalPrice","href","_info$functionalities","info","_useState","useState","_useState2","isModalOpen","setIsModalOpen","document","body","classList","toggle","dispatch","useDispatch","isFavorite","useSelector","selectFavoritesId","includes","toggleFavorite","rentalCompany","Modal","page","setPage","_cardsToDisplay","cardsToDisplay","displayedCars","isMoreToLoad","cardsToShow","length","_Fragment","InfoText","btn","car","index","BtnLoadMore","FiltersWrapper","InputWrapper","Input","left","Label","Submit","Reset","Svg","IoClose","min","max","formData","setFormData","brands","selectBrands","price","selectPrice","handleChangeSelect","selectedOption","value","setFilter","filter","handleChange","_e$target2","name","_objectSpread","_defineProperty","handleReset","htmlFor","Select","options","styles","stylesForBrand","isClearable","placeholder","onChange","stylesForPrice","onSubmit","preventDefault","_e$target","pattern","title","size","Wrapper","Text","Heart","MdHeartBroken","Link","NavLink","to","PageWrapper","selectCars","state","cars","selectFilter","selectIsLoading","isLoading","favorites","selectFavorites","createSelector","ids","favCars","favFilteredCars","filterCars","selectVisibleCars","uniqueBrands","arrOfUnique","Array","from","brandName","toLowerCase","label","numericPrices","parseInt","replace","maxPrice","Math","apply","_toConsumableArray","priceOption","i","push","toString"],"sourceRoot":""}